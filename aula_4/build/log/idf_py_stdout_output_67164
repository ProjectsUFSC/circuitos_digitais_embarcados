[1/10] Performing build step for 'bootloader'
[1/1] cd /Users/augustodaleffe/Desktop/prj_esp32/aula_4/build/bootloader/esp-idf/esptool_py && /Users/augustodaleffe/.espressif/python_env/idf5.3_py3.12_env/bin/python /Users/augustodaleffe/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/augustodaleffe/Desktop/prj_esp32/aula_4/build/bootloader/bootloader.bin
Bootloader binary size 0x6880 bytes. 0x780 bytes (7%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/aula_4.c.obj
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable aula_4.elf
[8/10] Generating binary image from built executable
esptool.py v4.8.dev5
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /Users/augustodaleffe/Desktop/prj_esp32/aula_4/build/aula_4.bin
[9/10] cd /Users/augustodaleffe/Desktop/prj_esp32/aula_4/build/esp-idf/esptool_py && /Users/augustodaleffe/.espressif/python_env/idf5.3_py3.12_env/bin/python /Users/augustodaleffe/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/augustodaleffe/Desktop/prj_esp32/aula_4/build/partition_table/partition-table.bin /Users/augustodaleffe/Desktop/prj_esp32/aula_4/build/aula_4.bin
aula_4.bin binary size 0x2d250 bytes. Smallest app partition is 0x100000 bytes. 0xd2db0 bytes (82%) free.
[9/10] cd /Users/augustodaleffe/esp/esp-idf/components/esptool_py && /usr/local/Cellar/cmake/3.30.3/bin/cmake -D IDF_PATH=/Users/augustodaleffe/esp/esp-idf -D "SERIAL_TOOL=/Users/augustodaleffe/.espressif/python_env/idf5.3_py3.12_env/bin/python;;/Users/augustodaleffe/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/augustodaleffe/Desktop/prj_esp32/aula_4/build -P /Users/augustodaleffe/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/cu.usbserial-1420 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 aula_4.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.dev5
Serial port /dev/cu.usbserial-1420
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: cc:db:a7:30:ff:54
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0003dfff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 26752 bytes to 16350...
Writing at 0x00001000... (100 %)
Wrote 26752 bytes (16350 compressed) at 0x00001000 in 0.6 seconds (effective 387.1 kbit/s)...
Hash of data verified.
Compressed 184912 bytes to 98140...
Writing at 0x00010000... (16 %)
Writing at 0x0001c772... (33 %)
Writing at 0x0002212d... (50 %)
Writing at 0x00028053... (66 %)
Writing at 0x0002f7e5... (83 %)
Writing at 0x00036c3c... (100 %)
Wrote 184912 bytes (98140 compressed) at 0x00010000 in 2.7 seconds (effective 548.2 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 1012.0 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
